#OCRC
#Version 0.1
#These function creates the Quartus project files necessary to buid a project
import os
import time


def createQSF(configurationFile, projectFile):
    print'Your project will be called',projectFile
    path = 'quartusProject'
    if not os.path.exists(path):
        os.makedirs(path)
        
    ##################################
    # Opening the configuration file #
    ##################################    
        
    tree = ET.parse('configurationFile')
    root = tree.getroot()
    print 'root.tag',root.tag
    
    for child in root:
        print child.tag, child.attrib
        
    for pin in root.iter('pin'):
        #name       = pin.get('name')
        #location   = pin.get('location')
        #ioStandard = pin.get('io_standard')
        print pin.attrib
        print 'The pin ',pin.attrib['name'],'is located @ ',pin.attrib['location']
        
    ############################
    # Creation of the QSF file #
    ############################
    
    fqsf = open(path + '/'+ filename +'.qsf', 'w')
    fqsf.write('Empty qsf for the moment\n')
    
    
    
    
    
    
    
    
# set_global_assignment -name FAMILY CYCLONEV
# set_global_assignment -name DEVICE 5CSXFC6D6F31C6
# set_global_assignment -name TOP_LEVEL_ENTITY ghrd_top
# set_global_assignment -name ORIGINAL_QUARTUS_VERSION 14.0
# set_global_assignment -name PROJECT_CREATION_TIME_DATE "17:30:00  JUNE 23, 2014"
# set_global_assignment -name LAST_QUARTUS_VERSION 14.0
# set_global_assignment -name QIP_FILE soc_system/synthesis/soc_system.qip
# set_global_assignment -name QIP_FILE ip/altsource_probe/hps_reset.qip
# set_global_assignment -name VERILOG_FILE ip/edge_detect/altera_edge_detector.v
# set_global_assignment -name VERILOG_FILE ip/debounce/debounce.v
# set_global_assignment -name VERILOG_FILE ghrd_top.v
# set_global_assignment -name PROJECT_OUTPUT_DIRECTORY output_files
# set_global_assignment -name EDA_SIMULATION_TOOL "<None>"
# set_global_assignment -name EDA_OUTPUT_DATA_FORMAT NONE -section_id eda_simulation
# set_global_assignment -name SDC_FILE soc_system_timing.sdc
# set_global_assignment -name ENABLE_SIGNALTAP ON
# set_global_assignment -name USE_SIGNALTAP_FILE cti_tapping.stp
# set_global_assignment -name SIGNALTAP_FILE cti_tapping.stp
# set_location_assignment PIN_AC18 -to fpga_clk_50
# set_location_assignment PIN_AB13 -to fpga_button_pio[1]
# set_location_assignment PIN_AA13 -to fpga_button_pio[0]
# set_location_assignment PIN_AG11 -to fpga_dipsw_pio[3]
# set_location_assignment PIN_AF11 -to fpga_dipsw_pio[2]
# set_location_assignment PIN_AH9 -to fpga_dipsw_pio[1]
# set_location_assignment PIN_AG10 -to fpga_dipsw_pio[0]
# set_location_assignment PIN_AB17 -to fpga_led_pio[3]
# set_location_assignment PIN_W15 -to fpga_led_pio[2]
# set_location_assignment PIN_Y16 -to fpga_led_pio[1]
# set_location_assignment PIN_AK2 -to fpga_led_pio[0]
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    ############################
    # Creation of the QPF file #
    ############################
    
    #open/create the file
    fqpf = open(path + '/'+ filename + '.qpf', 'w')
    
    fqpf.write('#---------------------------------------------#\n')
    fqpf.write('# This file is automatically generated by PAL #\n')
    fqpf.write('#---------------------------------------------#\n \n \n')
    # Version
    #print 'QUARTUS_VERSION = "14.0"\n'
    fqpf.write('QUARTUS_VERSION = "14.0"\n')
        # Date
    dateAndTime =  time.strftime("%X %B %d, %Y")
    #print 'DATE = "' + dateAndTime + '"'
    fqpf.write('DATE = "' + dateAndTime + '"\n')
    #revision
    #print 'PROJECT_REVISION = ' + 'filename'
    fqpf.write('PROJECT_REVISION =' + '"' + filename + '"' + '\n')
   
    fqsf.close()
    fqpf.close()
    print 'The Quartus project Files are now created '
    return

